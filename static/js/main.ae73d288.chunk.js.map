{"version":3,"sources":["components/Footer.js","firebase.js","components/Main.js","components/Elections.js","components/Results.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","topSpacing","paddingTop","spacing","footer","height","backgroundColor","palette","background","paper","padding","MadeFor","Typography","variant","color","align","Link","target","href","Copyright","Date","getFullYear","Footer","classes","className","firestore","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Main","useState","code","setCode","linkElement","setLinkElement","Box","textAlign","TextField","label","onChange","e","value","Button","onClick","preventDefault","collection","doc","get","then","exists","click","alert","to","ref","input","Elections","props","state","dbData","currentRound","selectedCandidate","userCode","React","createRef","fetchDataFromFirestore","bind","selectCandidate","handleCodeChange","confirmSelection","docRef","this","match","params","data","activeRound","roundDoc","setState","position","bgColor","voters","includes","roundRef","update","FieldValue","arrayUnion","add","vote","candidates","current","card","display","flexDirection","cardContent","flexGrows","text","text2","candidatesListJsx","name","city","i","push","Grid","item","key","xs","sm","md","Card","style","bgcolor","CardContent","gutterBottom","component","length","container","marginTop","paddingLeft","paddingRight","minWidth","justifyContent","width","Component","Results","votes","snapshot","votesList","forEach","voteDoc","roundName","resultsListJsx","numberOfVotes","candidate","numberOfCandidateVotes","filter","percentage","Math","round","Number","EPSILON","ListItem","ListItemText","primary","ListItemSecondaryAction","List","dense","history","goBack","Boolean","window","location","hostname","darkTheme","createMuiTheme","type","mainView","minHeight","alignItems","App","StrictMode","ThemeProvider","CssBaseline","basename","process","path","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ae73d288.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography, Link } from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topSpacing: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  footer: {\r\n    height: \"12vh\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction MadeFor() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n      {\"Wykonano dla \"}\r\n      <Link color=\"inherit\" target=\"_blank\" href=\"https://mftau.pl/\">\r\n        wspólnoty MF Tau\r\n      </Link>\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link\r\n        color=\"inherit\"\r\n        target=\"_blank\"\r\n        href=\"https://www.linkedin.com/in/bart%C5%82omiej-soko%C5%82owski-070943106/\"\r\n      >\r\n        Bartłomiej Sokołowski\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n  return (\r\n    <footer className={classes.footer}>\r\n      <div>\r\n        <MadeFor />\r\n      </div>\r\n      <div className={classes.topSpacing}>\r\n        <Copyright />\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDw2RLBRjHdgpjtK4QsNFSpJyRDNKId7qc\",\r\n  authDomain: \"onlineelections-641a1.firebaseapp.com\",\r\n  databaseURL: \"https://onlineelections-641a1.firebaseio.com\",\r\n  projectId: \"onlineelections-641a1\",\r\n  storageBucket: \"onlineelections-641a1.appspot.com\",\r\n  messagingSenderId: \"588573699709\",\r\n  appId: \"1:588573699709:web:4fa3d587ae587e903f0b14\",\r\n  measurementId: \"G-6JRK7DZ5NY\",\r\n});\r\n\r\nexport const firestore = firebaseApp.firestore();\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Box, TextField, Button } from \"@material-ui/core/\";\nimport { firestore } from \"../firebase\";\n\nexport default function Main() {\n  const [code, setCode] = useState(0);\n  const [linkElement, setLinkElement] = useState(0);\n\n  const handleCodeChange = (e) => {\n    setCode(e.target.value);\n  };\n\n  const handleBtnClick = (e) => {\n    e.preventDefault();\n    firestore\n      .collection(\"elections\")\n      .doc(code)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          linkElement.click();\n        } else {\n          alert(`Brak wyborów o kodzie ${code}`);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <h1>Wpisz kod wyborów, w których chcesz wziąć udział:</h1>\n      <Box textAlign=\"center\">\n        <TextField label=\"Kod wyborów\" onChange={handleCodeChange} />\n        <br />\n        <br />\n        <br />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleBtnClick}>\n          Zatwierdź\n        </Button>\n      </Box>\n      <RouterLink\n        to={`/elections/${code}`}\n        ref={(input) => setLinkElement(input)}\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  TextField,\r\n} from \"@material-ui/core/\";\r\nimport firebase from \"firebase/app\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nexport default class Elections extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dbData: null,\r\n      currentRound: null,\r\n      selectedCandidate: null,\r\n      userCode: \"\",\r\n    };\r\n    this.linkElement = React.createRef();\r\n    this.fetchDataFromFirestore = this.fetchDataFromFirestore.bind(this);\r\n    this.selectCandidate = this.selectCandidate.bind(this);\r\n    this.handleCodeChange = this.handleCodeChange.bind(this);\r\n    this.confirmSelection = this.confirmSelection.bind(this);\r\n  }\r\n\r\n  fetchDataFromFirestore() {\r\n    const docRef = firestore\r\n      .collection(\"elections\")\r\n      .doc(this.props.match.params.code);\r\n    docRef.get().then((doc) => {\r\n      const data = doc.data();\r\n      docRef\r\n        .collection(\"rounds\")\r\n        .doc(data.activeRound)\r\n        .get()\r\n        .then((roundDoc) => {\r\n          // for (let i = 0; i < 9; i++) {\r\n          //   docRef.collection(\"rounds\").add(roundDoc.data());\r\n          // }\r\n          this.setState({\r\n            dbData: data,\r\n            currentRound: roundDoc.data(),\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  selectCandidate(position, bgColor) {\r\n    if (bgColor === \"\") this.setState({ selectedCandidate: position });\r\n    else this.setState({ selectedCandidate: null });\r\n  }\r\n\r\n  handleCodeChange(e) {\r\n    this.setState({ userCode: e.target.value });\r\n  }\r\n\r\n  confirmSelection() {\r\n    const userCode = this.state.userCode;\r\n    if (this.state.selectedCandidate == null) {\r\n      alert(\"Nie można zatwierdzić głosu bez wybrania kandydata!\");\r\n      return;\r\n    } else if (userCode === \"\") {\r\n      alert(\"Nie można zatwierdzić głosu bez podania swojego kodu!\");\r\n      return;\r\n    }\r\n    const docRef = firestore\r\n      .collection(\"elections\")\r\n      .doc(this.props.match.params.code);\r\n    docRef.get().then((doc) => {\r\n      const data = doc.data();\r\n      if (!data.voters.includes(userCode)) {\r\n        alert(\r\n          \"Nie znaleziono podanego kodu na liście kodów umożliwiających głosowanie!\"\r\n        );\r\n        return;\r\n      }\r\n      const roundRef = docRef.collection(\"rounds\").doc(data.activeRound);\r\n      roundRef.get().then((roundDoc) => {\r\n        const roundData = roundDoc.data();\r\n        if (roundData.voters.includes(userCode)) {\r\n          alert(\"Oddano już głos używając podanego kodu!\");\r\n          return;\r\n        }\r\n        roundRef.update({\r\n          voters: firebase.firestore.FieldValue.arrayUnion(userCode),\r\n        });\r\n        roundRef.collection(\"votes\").add({\r\n          vote: this.state.currentRound.candidates[\r\n            this.state.selectedCandidate\r\n          ],\r\n        });\r\n        alert(\"Głos pomyślnie zapisany!\");\r\n        this.linkElement.current.click();\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataFromFirestore();\r\n  }\r\n\r\n  render() {\r\n    const buttons = {\r\n      minWidth: \"30vh\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"30px\",\r\n    };\r\n    const grid = {\r\n      marginTop: \"30px\",\r\n      paddingLeft: \"20px\",\r\n      paddingRight: \"20px\",\r\n    };\r\n    const card = {\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      textAlign: \"center\",\r\n    };\r\n    const cardContent = {\r\n      flexGrows: 1,\r\n      height: \"100%\",\r\n    };\r\n\r\n    let text = \"\";\r\n    let text2 = \"\";\r\n    const candidatesListJsx = [];\r\n    if (this.state.currentRound != null) {\r\n      text = this.state.currentRound.name;\r\n      text2 = `w MF Tau ${this.state.dbData.city}`;\r\n\r\n      for (let i = 0; i < this.state.currentRound.candidates.length; i++) {\r\n        let bgColor = \"\";\r\n        if (\r\n          this.state.selectedCandidate != null &&\r\n          this.state.selectedCandidate === i\r\n        )\r\n          bgColor = \"primary.main\";\r\n        candidatesListJsx.push(\r\n          <Grid\r\n            item\r\n            key={i}\r\n            xs={6}\r\n            sm={4}\r\n            md={2}\r\n            onClick={() => this.selectCandidate(i, bgColor)}\r\n          >\r\n            <Card style={card}>\r\n              <Box bgcolor={bgColor} style={cardContent}>\r\n                <CardContent>\r\n                  <Typography\r\n                    align=\"center\"\r\n                    gutterBottom\r\n                    variant=\"h6\"\r\n                    component=\"h2\"\r\n                  >\r\n                    {this.state.currentRound.candidates[i]}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>\r\n          {text}\r\n          <br />\r\n          {text2}\r\n        </h1>\r\n        <Grid container spacing={3} style={grid}>\r\n          {candidatesListJsx}\r\n        </Grid>\r\n        <Box textAlign=\"center\" marginTop=\"20px\">\r\n          <TextField label=\"Kod głosowania\" onChange={this.handleCodeChange} />\r\n        </Box>\r\n        <div style={buttons}>\r\n          <Button variant=\"contained\" onClick={this.fetchDataFromFirestore}>\r\n            Odśwież\r\n          </Button>\r\n          <Box width=\"100px\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.confirmSelection}\r\n          >\r\n            Zagłosuj\r\n          </Button>\r\n        </div>\r\n        <RouterLink\r\n          to={`/results/${this.props.match.params.code}`}\r\n          ref={this.linkElement}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core/\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nexport default class Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dbData: null,\r\n      currentRound: null,\r\n      votes: null,\r\n    };\r\n    this.fetchDataFromFirestore = this.fetchDataFromFirestore.bind(this);\r\n  }\r\n\r\n  fetchDataFromFirestore() {\r\n    const docRef = firestore\r\n      .collection(\"elections\")\r\n      .doc(this.props.match.params.code);\r\n    docRef.get().then((doc) => {\r\n      const data = doc.data();\r\n      const roundRef = docRef.collection(\"rounds\").doc(data.activeRound);\r\n      roundRef.get().then((roundDoc) => {\r\n        roundRef\r\n          .collection(\"votes\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            const votesList = [];\r\n            snapshot.forEach((voteDoc) => {\r\n              votesList.push(voteDoc.data().vote);\r\n            });\r\n            this.setState({\r\n              dbData: data,\r\n              currentRound: roundDoc.data(),\r\n              votes: votesList,\r\n            });\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDataFromFirestore();\r\n  }\r\n\r\n  render() {\r\n    const buttons = {\r\n      minWidth: \"30vh\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"30px\",\r\n    };\r\n\r\n    let roundName = \"\";\r\n    const resultsListJsx = [];\r\n    if (this.state.currentRound != null) {\r\n      roundName = this.state.currentRound.name;\r\n\r\n      const numberOfVotes = this.state.votes.length;\r\n      for (let i = 0; i < this.state.currentRound.candidates.length; i++) {\r\n        const candidate = this.state.currentRound.candidates[i];\r\n        const numberOfCandidateVotes = this.state.votes.filter(\r\n          (vote) => vote === candidate\r\n        ).length;\r\n        let percentage = (numberOfCandidateVotes / numberOfVotes) * 100;\r\n        percentage = Math.round((percentage + Number.EPSILON) * 100) / 100;\r\n        resultsListJsx.push(\r\n          <ListItem>\r\n            <ListItemText primary={candidate} />\r\n            <ListItemSecondaryAction>\r\n              {`${numberOfCandidateVotes} (${percentage}%)`}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Wyniki wyborów w głosowaniu <br />\r\n          {`\"${roundName}\"`}\r\n        </h1>\r\n        <List dense={true}>{resultsListJsx}</List>\r\n        <div style={buttons}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => this.props.history.goBack()}\r\n          >\r\n            Wstecz\r\n          </Button>\r\n          <Box width=\"100px\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.fetchDataFromFirestore}\r\n          >\r\n            Odśwież\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Main from \"./components/Main\";\nimport Elections from \"./components/Elections\";\nimport Results from \"./components/Results\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport \"./index.css\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  mainView: {\n    minHeight: \"88vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <React.StrictMode>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <div className={classes.mainView}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/elections/:code\" component={Elections} />\n            <Route path=\"/results/:code\" component={Results} />\n          </BrowserRouter>\n        </div>\n        <Footer />\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}